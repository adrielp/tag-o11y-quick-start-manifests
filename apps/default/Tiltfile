if k8s_context() != "k3d-otel-basic":
  fail("Expected context to be k3d-otel-basic")

USE_ARGO = os.getenv("DEPLOY_ARGO", False)
USE_WEBHOOK = os.getenv("DEPLOY_WEBHOOK", False)

include("../../cluster-infra/cert-manager/Tiltfile")
include("../../cluster-infra/otel-operator/Tiltfile")
include("../../cluster-infra/jaeger-operator/Tiltfile")
if USE_ARGO:
    include("../argocd/Tiltfile")

if USE_WEBHOOK:
    include("../../collectors/webhook/Tiltfile")

k8s_yaml(kustomize("."), allow_duplicates=True)

k8s_kind("Jaeger")

k8s_resource(
  objects=[
    "gateway:opentelemetrycollector"
  ],
  new_name="gateway-collector",
  port_forwards=[
    port_forward(4319, 4317, name='otlp-grpc'),
    port_forward(4318, 4318, name='otlp-http')
  ],
  labels=[
    "gateway-collector"
  ],
  resource_deps=[
    "opentelemetry-operator-controller-manager"
  ]
)
k8s_resource(
  workload="grafana",
  port_forwards=3000,
  labels=[
    "default-apps"
  ]
)
k8s_resource(
  workload="jaeger-all-in-one",
  port_forwards=16686, 
  resource_deps=[
    "jaeger-operator"
  ],
  labels=[
    "default-apps"
  ]
)
k8s_resource(
  workload="loki",
  port_forwards=3100,
  labels=[
    "default-apps"
  ]
)
k8s_resource(
  workload="prometheus",
  port_forwards=9090,
  labels=[
    "default-apps"
  ]
)
k8s_resource(
  workload="tempo", 
  port_forwards=4317,
  labels=[
    "default-apps"
  ]
)
